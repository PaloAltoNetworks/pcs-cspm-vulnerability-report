name: Prisma Cloud Vulnerabilities Report

on:
  push:
    branches: [ "main" ]
  schedule:
    - cron:  '0 14 * * FRI'

permissions:
  contents: read

env:
  OUT_FILE: ${{ vars.OUT_FILE || 'vulnerabilities_report.csv' }}

jobs:
  report:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run script
      env:
        PRISMA_API_ENDPOINT: ${{ secrets.PRISMA_API_ENDPOINT }}
        PRISMA_USERNAME: ${{ secrets.PRISMA_USERNAME }}
        PRISMA_PASSWORD: ${{ secrets.PRISMA_PASSWORD }}
        OWNER_TAG: ${{ vars.OWNER_TAG || 'owner' }}
      run: |
        QUERY="${{ vars.QUERY || 'none' }}"
        [[ $QUERY != "none" ]] && export QUERY
        python searchVulns.py
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: vulnerabilities_report
        path: ${{ env.OUT_FILE }}